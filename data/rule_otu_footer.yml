{% block footer %}

rule FilterMinReplicateNumber:
    tool: wopmetabarcoding.wrapper.FilterMinReplicateNumber
    input:
        table:
            Run: wopmetabarcoding.model.Run
            Marker: wopmetabarcoding.model.Marker
            Biosample: wopmetabarcoding.model.Biosample
            Replicate: wopmetabarcoding.model.Replicate
            FilterLFN: wopmetabarcoding.model.FilterLFN
        file:
            fastainfo: {{fastainfo}}
    output:
        table:
            FilterMinReplicateNumber: wopmetabarcoding.model.FilterMinReplicateNumber
    params:
        min_replicate_number: {{min_replicate_number}}
        log_verbosity: {{log_verbosity}}
        log_file: {{log_file}}
#
rule FilterPCRError:
    tool: wopmetabarcoding.wrapper.FilterPCRError
    input:
        table:
            Marker: wopmetabarcoding.model.Marker
            Run: wopmetabarcoding.model.Run
            Biosample: wopmetabarcoding.model.Biosample
            Replicate: wopmetabarcoding.model.Replicate
            Variant: wopmetabarcoding.model.Variant
            FilterMinReplicateNumber: wopmetabarcoding.model.FilterMinReplicateNumber
        file:
            fastainfo: {{fastainfo}}
    output:
        table:
            FilterPCRError: wopmetabarcoding.model.FilterPCRError
    params:
        pcr_error_var_prop: {{pcr_error_var_prop}}
        log_verbosity: {{log_verbosity}}
        log_file: {{log_file}}
#
rule FilterChimera:
    tool: wopmetabarcoding.wrapper.FilterChimera
    input:
        table:
            Marker: wopmetabarcoding.model.Marker
            Run: wopmetabarcoding.model.Run
            Biosample: wopmetabarcoding.model.Biosample
            Replicate: wopmetabarcoding.model.Replicate
            Variant: wopmetabarcoding.model.Variant
            FilterPCRError: wopmetabarcoding.model.FilterPCRError
        file:
            fastainfo: {{fastainfo}}
    output:
        table:
            FilterChimera: wopmetabarcoding.model.FilterChimera
            FilterChimeraBorderline: wopmetabarcoding.model.FilterChimeraBorderline
    params:
        log_verbosity: {{log_verbosity}}
        log_file: {{log_file}}

rule FilterRenkonen:
    tool: wopmetabarcoding.wrapper.FilterRenkonen
    input:
        table:
            Marker: wopmetabarcoding.model.Marker
            Run: wopmetabarcoding.model.Run
            Biosample: wopmetabarcoding.model.Biosample
            Replicate: wopmetabarcoding.model.Replicate
            FilterChimera: wopmetabarcoding.model.FilterChimera
        file:
            fastainfo: {{fastainfo}}
    output:
        table:
            FilterRenkonen: wopmetabarcoding.model.FilterRenkonen
    params:
        renkonen_threshold: {{renkonen_threshold}}
        log_verbosity: {{log_verbosity}}
        log_file: {{log_file}}

rule FilterIndel:
    tool: wopmetabarcoding.wrapper.FilterIndel
    input:
        table:
            Marker: wopmetabarcoding.model.Marker
            Run: wopmetabarcoding.model.Run
            Biosample: wopmetabarcoding.model.Biosample
            Replicate: wopmetabarcoding.model.Replicate
            Variant: wopmetabarcoding.model.Variant
            FilterRenkonen: wopmetabarcoding.model.FilterRenkonen
        file:
            fastainfo: {{fastainfo}}
    output:
        table:
            FilterIndel: wopmetabarcoding.model.FilterIndel
    params:
        log_verbosity: {{log_verbosity}}
        log_file: {{log_file}}

rule FilterCodonStop:
    tool: wopmetabarcoding.wrapper.FilterCodonStop
    input:
        table:
            Marker: wopmetabarcoding.model.Marker
            Run: wopmetabarcoding.model.Run
            Biosample: wopmetabarcoding.model.Biosample
            Replicate: wopmetabarcoding.model.Replicate
            Variant: wopmetabarcoding.model.Variant
            FilterIndel: wopmetabarcoding.model.FilterIndel
        file:
            fastainfo: {{fastainfo}}
    output:
        table:
            FilterCodonStop: wopmetabarcoding.model.FilterCodonStop
    params:
        genetic_table_number: {{genetic_table_number}}
        log_verbosity: {{log_verbosity}}
        log_file: {{log_file}}

rule ReadCountAverageOverReplicates:
    tool: wopmetabarcoding.wrapper.ReadCountAverageOverReplicates
    input:
        table:
            Marker: wopmetabarcoding.model.Marker
            Run: wopmetabarcoding.model.Run
            Biosample: wopmetabarcoding.model.Biosample
            Replicate: wopmetabarcoding.model.Replicate
            FilterCodonStop: wopmetabarcoding.model.FilterCodonStop
        file:
            fastainfo: {{fastainfo}}
    output:
        table:
            ReadCountAverageOverReplicates: wopmetabarcoding.model.ReadCountAverageOverReplicates
    params:
        log_verbosity: {{log_verbosity}}
        log_file: {{log_file}}

rule TaxAssign:
    tool: wopmetabarcoding.wrapper.TaxAssign
    input:
        table:
            Marker: wopmetabarcoding.model.Marker
            Run: wopmetabarcoding.model.Run
            Biosample: wopmetabarcoding.model.Biosample
            Replicate: wopmetabarcoding.model.Replicate
            Variant: wopmetabarcoding.model.Variant
            FilterCodonStop: wopmetabarcoding.model.FilterCodonStop
        file:
            fastainfo: {{fastainfo}}
            taxonomy: {{taxonomy}}
    output:
        table:
            TaxAssign: wopmetabarcoding.model.TaxAssign
    params:
        identity_threshold: {{identity_threshold}}
        include_prop: {{include_prop}}
        min_number_of_taxa: {{min_number_of_taxa}}
        log_verbosity: {{log_verbosity}}
        log_file: {{log_file}}


rule MakeOtuTable:
    tool: wopmetabarcoding.wrapper.MakeOtuTable
    input:
        table:
            Marker: wopmetabarcoding.model.Marker
            Run: wopmetabarcoding.model.Run
            Biosample: wopmetabarcoding.model.Biosample
            Replicate: wopmetabarcoding.model.Replicate
            Variant: wopmetabarcoding.model.Variant
            FilterChimeraBorderline: wopmetabarcoding.model.FilterChimeraBorderline
            FilterCodonStop: wopmetabarcoding.model.FilterCodonStop
            TaxAssign: wopmetabarcoding.model.TaxAssign
        file:
            fastainfo: {{fastainfo}}
            taxonomy: {{taxonomy}}
    output:
        file:
            OTUTable: {{otutable}}
    params:
        log_verbosity: {{log_verbosity}}
        log_file: {{log_file}}

{% endblock %}
